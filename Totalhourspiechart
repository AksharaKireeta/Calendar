import React from "react";
import { Grid } from "@mui/material";
import EmployeeListCard from "./EmployeeListCard";
import SickHoursPieChart from "./SickHoursPieChart";
import TotalHoursPieChart from "./TotalHoursPieChart";
import CasualHoursPieChart from "./CasualHoursPieChart";

const Dashboard = () => {
  return (
    <Grid container spacing={2}>
      {/* Card 1 */}
      <Grid item xs={12} sm={6} md={6} lg={6}>
        <EmployeeListCard />
      </Grid>

      {/* Card 2 */}
      <Grid item xs={12} sm={6} md={6} lg={6}>
        <SickHoursPieChart />
      </Grid>

      {/* Card 3 */}
      <Grid item xs={12} sm={6} md={6} lg={6}>
        <TotalHoursPieChart />
      </Grid>

      {/* Card 4 */}
      <Grid item xs={12} sm={6} md={6} lg={6}>
        <CasualHoursPieChart />
      </Grid>
    </Grid>
  );
};

export default Dashboard;




import React, { useEffect, useState } from "react";
import { Chart, registerables } from 'chart.js'
import axios from 'axios';
Chart.register(...registerables)

const TotalHoursPieChart = () => {
  const [leaveData, setLeaveData] = useState([]);

  useEffect(() => {
    // Fetch data from the provided URL
    axios
      .get("http://localhost:8082/events/LeaveCount/JohnWick")
      .then((response) => {
        // Map the response data to calculate total leave hours for each employee
        const data = Object.entries(response.data).map(([employeeName, leaveCount]) => ({
          empname: employeeName,
          totalhours: leaveCount * 8, // Calculate total leave hours
        }));
        setLeaveData(data);
      })
      .catch((error) => {
        console.error("Error fetching data:", error);
      });
  }, []);

  useEffect(() => {
    // Create a Pie Chart
    const canvas = document.getElementById("totalLeaveChart");
    const context = canvas.getContext("2d");

    if (canvas.chart) {
      canvas.chart.destroy();
    }

    const pieData = {
      labels: leaveData.map((entry) => entry.empname),
      datasets: [
        {
          data: leaveData.map((entry) => entry.totalhours),
          backgroundColor: leaveData.map((entry) => getRandomColor()), // Use random colors
        },
      ],
    };

    const newChart = new Chart(context, {
      type: "pie",
      data: pieData,
      options: {
        plugins: {
          legend: {
            display: true,
            position: "bottom", // Position the legend at the bottom
            align: "start", // Align legend items vertically
          },
          tooltip: {
            callbacks: {
              label: (context) => {
                const label = context.dataset.labels[context.dataIndex];
                const value = context.formattedValue;
                return `${label}: ${value} hours`;
              },
            },
          },
        },
      },
    });

    canvas.chart = newChart;
  }, [leaveData]);

  const getRandomColor = () => {
    const letters = "0123456789ABCDEF";
    let color = "#";
    for (let i = 0; i < 6; i++) {
      color += letters[Math.floor(Math.random() * 16)];
    }
    return color;
  };

  return (
    <div className="card">
      <h2>Total Leave Hours</h2>
      <canvas id="totalLeaveChart" />
    </div>
  );
};

export default TotalHoursPieChart;





import React, { useEffect, useState } from "react";
import { Chart, registerables } from 'chart.js'
import axios from 'axios';
Chart.register(...registerables)

const TotalHoursPieChart = () => {
  const [leaveData, setLeaveData] = useState([]);

  useEffect(() => {
    // Fetch data from the provided URL
    axios
      .get("http://localhost:8082/events/LeaveCount/JohnWick")
      .then((response) => {
        // Map the response data to calculate total leave hours for each employee
        const data = Object.entries(response.data).map(([employeeName, leaveCount]) => ({
          empname: employeeName,
          totalhours: leaveCount * 8, // Calculate total leave hours
        }));
        setLeaveData(data);
      })
      .catch((error) => {
        console.error("Error fetching data:", error);
      });
  }, []);

  useEffect(() => {
    // Create a Pie Chart
    const canvas = document.getElementById("totalLeaveChart");
    const context = canvas.getContext("2d");

    if (canvas.chart) {
      canvas.chart.destroy();
    }

    const pieData = {
      labels: leaveData.map((entry) => entry.empname),
      datasets: [
        {
          data: leaveData.map((entry) => entry.totalhours),
          backgroundColor: leaveData.map((entry) => getRandomColor()), // Use random colors
        },
      ],
    };

    const newChart = new Chart(context, {
      type: "pie",
      data: pieData,
      options: {
        // Add custom chart options for styling
        plugins: {
          legend: {
            display: false, // Hide legend
          },
          tooltip: {
            callbacks: {
              label: (context) => {
                const label = context.dataset.labels[context.dataIndex];
                const value = context.formattedValue;
                return `${label}: ${value} hours`;
              },
            },
          },
        },
      },
    });

    canvas.chart = newChart;
  }, [leaveData]);

  const getRandomColor = () => {
    const letters = "0123456789ABCDEF";
    let color = "#";
    for (let i = 0; i < 6; i++) {
      color += letters[Math.floor(Math.random() * 16)];
    }
    return color;
  };

  return (
    <div className="card">
      <h2>Total Leave Hours</h2>
      <canvas id="totalLeaveChart" />
    </div>
  );
};

export default TotalHoursPieChart;




<html>
  <head>
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
      google.charts.load('current', {'packages':['corechart']});
      google.charts.setOnLoadCallback(drawChart);

      function drawChart() {

        var data = google.visualization.arrayToDataTable([
          ['Task', 'Hours per Day'],
          ['Work',     11],
          ['Eat',      2],
          ['Commute',  2],
          ['Watch TV', 2],
          ['Sleep',    7]
        ]);

        var options = {
          title: 'My Daily Activities'
        };

        var chart = new google.visualization.PieChart(document.getElementById('piechart'));

        chart.draw(data, options);
      }
    </script>
  </head>
  <body>
    <div id="piechart" style="width: 900px; height: 500px;"></div>
  </body>
</html>














import React from "react";
import { Grid, Card, CardContent, Typography } from "@mui/material";
import EmployeeListCard from "./EmployeeListCard"; // Import your Employee List Card component
import SickHoursPieChart from "./SickHoursPieChart"; // Import your Sick Hours Pie Chart component
import TotalHoursPieChart from "./TotalHoursPieChart"; // Import your Total Hours Pie Chart component
import CasualHoursPieChart from "./CasualHoursPieChart"; // Import your Casual Hours Pie Chart component

const Dashboard = () => {
  return (
    <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>
      <Grid item xs={12} sm={6} md={3}>
        <Card variant="outlined">
          <CardContent>
            <Typography variant="h6">Employee List</Typography>
            <EmployeeListCard />
          </CardContent>
        </Card>
      </Grid>
      <Grid item xs={12} sm={6} md={3}>
        <Card variant="outlined">
          <CardContent>
            <Typography variant="h6">Sick Hours Pie Chart</Typography>
            <SickHoursPieChart />
          </CardContent>
        </Card>
      </Grid>
      <Grid item xs={12} sm={6} md={3}>
        <Card variant="outlined">
          <CardContent>
            <Typography variant="h6">Total Hours Pie Chart</Typography>
            <TotalHoursPieChart />
          </CardContent>
        </Card>
      </Grid>
      <Grid item xs={12} sm={6} md={3}>
        <Card variant="outlined">
          <CardContent>
            <Typography variant="h6">Casual Hours Pie Chart</Typography>
            <CasualHoursPieChart />
          </CardContent>
        </Card>
      </Grid>
    </Grid>
  );
};

export default Dashboard;






<Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>
  <Grid item xs={6}>
    <Item>1</Item>
  </Grid>
  <Grid item xs={6}>
    <Item>2</Item>
  </Grid>
  <Grid item xs={6}>
    <Item>3</Item>
  </Grid>
  <Grid item xs={6}>
    <Item>4</Item>
  </Grid>
</Grid>







import React, { useEffect, useState } from "react";
import { Chart, registerables } from "chart.js";
import axios from "axios";
Chart.register(...registerables);

const TotalLeavePieChart = () => {
  const [leaveData, setLeaveData] = useState([]);

  useEffect(() => {
    // Fetch data from the provided URL
    axios
      .get("http://localhost:8082/events/LeaveCount/JohnWick")
      .then((response) => {
        // Map the response data to calculate total leave hours for each employee
        const data = Object.entries(response.data).map(([employeeName, leaveCount]) => ({
          empname: employeeName,
          totalhours: leaveCount * 8, // Calculate total leave hours
        }));
        setLeaveData(data);
      })
      .catch((error) => {
        console.error("Error fetching data:", error);
      });
  }, []);

  useEffect(() => {
    // Create a Pie Chart
    const canvas = document.getElementById("totalLeaveChart");
    const context = canvas.getContext("2d");

    if (canvas.chart) {
      canvas.chart.destroy();
    }

    const pieData = {
      labels: leaveData.map((entry) => entry.empname),
      datasets: [
        {
          data: leaveData.map((entry) => entry.totalhours),
          backgroundColor: generateRandomColors(leaveData.length), // Generate different colors
        },
      ],
    };

    const newChart = new Chart(context, {
      type: "pie",
      data: pieData,
      options: {},
    });

    canvas.chart = newChart;
  }, [leaveData]);

  // Function to generate random colors
  const generateRandomColors = (count) => {
    const colors = [];
    for (let i = 0; i < count; i++) {
      const color = `#${Math.floor(Math.random() * 16777215).toString(16)}`;
      colors.push(color);
    }
    return colors;
  };

  return (
    <div className="card">
      <h2>Total Leave Hours Pie Chart</h2>
      <canvas id="totalLeaveChart" />
    </div>
  );
};

export default TotalLeavePieChart;







import React, { useEffect, useState } from "react";
import { Chart, registerables } from 'chart.js'
import axios from 'axios';
Chart.register(...registerables)

const TotalHoursPieChart = () => {
  const [leaveData, setLeaveData] = useState([]);

  useEffect(() => {
    axios.get('http://localhost:8082/events/LeaveCount/JohnWick')
      .then((response) => {
        const data = response.data.map((entry) => ({
          empname: entry.employeeName,
          totalhours: entry.leaveCount * 8,
        }));
        setLeaveData(data);
      })
      .catch((error) => {
        console.error('Error fetching data:', error);
      });
  }, []);

  const getRandomColor = () => {
    const letters = "0123456789ABCDEF";
    let color = "#";
    for (let i = 0; i < 6; i++) {
      color += letters[Math.floor(Math.random() * 16)];
    }
    return color;
  };

  useEffect(() => {
    const canvas = document.getElementById("totalHoursChart");
    const context = canvas.getContext("2d");

    if (canvas.chart) {
      canvas.chart.destroy();
    }

    const pieData = {
      labels: leaveData.map((entry) => entry.empname),
      datasets: [
        {
          data: leaveData.map((entry) => entry.totalhours),
          backgroundColor: leaveData.map((entry) => getRandomColor()),
        },
      ],
    };

    const newChart = new Chart(context, {
      type: "pie",
      data: pieData,
      options: {},
    });

    canvas.chart = newChart;
  }, [leaveData]);

  return (
    <div className="card">
      <h2>Total Leave Hours</h2>
      <canvas id="totalHoursChart" />
    </div>
  );
};

export default TotalHoursPieChart;









//totalhours
import React, { useEffect, useState } from "react";
import { Chart, registerables } from 'chart.js'
import axios from 'axios';
Chart.register(...registerables)
const TotalHoursPieChart = () => {
  const[leaveData, setLeaveData]=useState([]);
  useEffect(() => {
    axios.get('http://localhost:8082/events/LeaveCount/JohnWick')
    .then((response)=>{
      const data =response.data.map((entry)=>({
        empname:entry.employeeName,
        totalhours:entry.leaveCount*8,
      }));
      setLeaveData(data);
    })
   .catch((error)=>{
    console.error('error fetching data:',error);
   });
  },[]);
  const getRandomColor=()=> {
    const letters = "0123456789ABCDEF";
    let color = "#";
    for (let i = 0; i < 6; i++) {
      color += letters[Math.floor(Math.random() * 16)];
    }
    return color;
  };
  useEffect(()=>{
    const canvas = document.getElementById("totalHoursChart");
    const context = canvas.getContext("2d");
    if (canvas.chart) {
      canvas.chart.destroy();
    }
    const pieData = {
      labels: leaveData.map((entry) => entry.empname),
      datasets: [
        {
          data: leaveData.map((entry) => entry.totalhours),
          backgroundColor: leaveData.map((entry) => getRandomColor()),
        },
      ],
    };
    const newChart = new Chart(context, {
      type: "pie",
      data: pieData,
      options: {
      },
    });
    canvas.chart = newChart;
  }, [leaveData]);
  return (
    <div className="card">
       <h2>Total Leave Hours</h2>
      <canvas id="totalHoursChart" />
    </div>
  );
};

//employee list card
import React, { useState, useEffect } from "react";
import axios from "axios";

const EmployeeListCard = () => {
  const [leaveCountData, setLeaveCountData] = useState([]);
  const [isLoading, setIsLoading] = useState(true);

  useEffect(() => {
    axios.get("http://localhost:8082/events/LeaveCount/JohnWick")
      .then((response) => {
        const data =Object.entries(response.data).map(([employeeName,leaveCount])=>({employeeName,leaveCount}));
        setLeaveCountData(data);
        setIsLoading(false);
      })
      .catch((error) => {
        console.error("Error fetching data:", error);
        setIsLoading(false);
      });
  }, []);

  if (isLoading) {
    return <p>Loading...</p>;
  }

  return (
    <div className="leave-count-table">
      <table>
        <thead>
          <tr>
            <th>Employee Name</th>
            <th>Leave Count</th>
          </tr>
        </thead>
        <tbody>
          {leaveCountData.map((entry, index) => (
            <tr key={index}>
              <td>{entry.employeeName}</td>
              <td>{entry.leaveCount}</td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
};

export default EmployeeListCard;
