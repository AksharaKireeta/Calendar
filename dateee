function parseFrenchDate(frenchDateString) {
  const frenchMonths = {
    'janvier': 0, 'février': 1, 'mars': 2, 'avril': 3, 'mai': 4, 'juin': 5,
    'juillet': 6, 'août': 7, 'septembre': 8, 'octobre': 9, 'novembre': 10, 'décembre': 11
  };

  const [day, monthStr, year] = frenchDateString.split(' ');
  const month = frenchMonths[monthStr.toLowerCase()];
  
  // Construct a formatted date string in the format "MM/DD/YYYY"
  const formattedDateString = `${month + 1}/${day}/${year}`;

  // Create a Date object by parsing the formatted date string
  const parsedDate = new Date(formattedDateString);

  // Check if the parsed date is valid
  if (isNaN(parsedDate.getTime())) {
    throw new Error('Invalid date');
  }

  return parsedDate;
}

const frenchDate = "24 Mai 2024";
const fullDate = parseFrenchDate(frenchDate);
console.log(fullDate);







if (null !== newState.selectedProduct.serviceDTOList) {
    const targetStartValue = newState.selectedProduct.serviceDTOList[0].targetStartValue;
    const date = (typeof targetStartValue === 'string') ? new Date(targetStartValue) : targetStartValue;
    if (!isNaN(date.getTime())) {
        const options: Intl.DateTimeFormatOptions = { year: 'numeric', month: '2-digit', day: '2-digit' };
        const formattedDate = date.toLocaleDateString('en-GB', options); // English date format
        const formattedFrenchDate = date.toLocaleDateString('fr-FR', options); // French date format
        newState.selectedProductPurchaseDate = `${formattedDate} / ${formattedFrenchDate}`;
    } else {
        console.error('Invalid date format');
    }
}





if (null !== newState.selectedProduct.serviceDTOList) {
    const date = new Date(newState.selectedProduct.serviceDTOList[0].targetStartValue);
    const options = { year: 'numeric', month: '2-digit', day: '2-digit' };
    const formattedDate = date.toLocaleDateString('en-GB', options); // English date format
    const formattedFrenchDate = date.toLocaleDateString('fr-FR', options); // French date format
    newState.selectedProductPurchaseDate = `${formattedDate} / ${formattedFrenchDate}`;
}
below error is coming for the above code. 
No overload matches this call.
  Overload 1 of 3, '(locales?: LocalesArgument, options?: DateTimeFormatOptions): string', gave the following error.
    Argument of type '{ year: string; month: string; day: string; }' is not assignable to parameter of type 'DateTimeFormatOptions'.
      Types of property 'year' are incompatible.
        Type 'string' is not assignable to type '"numeric" | "2-digit"'.
  Overload 2 of 3, '(locales?: string | string[], options?: DateTimeFormatOptions): string', gave the following error.
    Argument of type '{ year: string; month: string; day: string; }' is not assignable to parameter of type 'DateTimeFormatOptions'.ts(2769)

make the code changes and fix it
